Python:
    - Python is an interpreted, high-level, general-purpose programming language
Interpretor:
    - An interpreter works in exactly the same way as a compiler, with one difference: instead of code generation,
        it loads the output in-memory and executes it directly on your system
Conditions:
    -if
    -elif
    -else
Logical operators:
    -and
    -or
    -not
Comparision opeators:
    - >
    - ==
    - !=
String formatter:
    - ex: print(f'{somevalue}')

Loops:
    - for loop
        syntax: for item in someiterable object
        -ex: for item in range(4) (we can create range function to create range object)
    - while loop
        -syntax: while somecondtion:

Datastructure in Python:
    List : It is iterable can be modified, representation using []
    Tuples : It is iterable but cant be modified ,it is read only list, represented using ()
    Dictionaries : It is key value pair,can be modified, represented using {}
    Set: It is iterable , it does not have index. represented using {}
Unpacking in python: ex numbers = [1,2,3]
                        x,y,z = numbers , it is applicable to list also
Function in python:
    - By default function will return None object
    -  We can have keyword arguement and default parameter in python
    - If we are mixing positonal arguement and keyworkd arguement then we should write postional arguement first followed by
        keyword arguement

Error handling:
    - Using try and except block
Comments:
    - # single line comment - shortcut ctrl+/

Class:
    - Class is the blueprint of the object
    - Object is the actuall instance of the class
    - ex className = ClassName()

Constructor:
    - ex: def _init_(self) using this we can initialize our object

Inheritance:
    - It is the mechanism to reuse the code

Module:
    - It is basically a file, which has some python code
    - It can be reused across the file
    - We can import the whole module or the required module
    - MOdules are use to organize or code very well
Packages:
    - It is an another way to organize our code
    - It is a container for multiple module
    - __init__.py it is special file so that python treates directory as a package otherwise it wont treat as package
    - while imporing modules from differenct packages we should specify package name along with the modules
Note:
    - TO find different python modules - search -" python 3 module index" in the browser
    - pep -> Python enhancement proposal
    - pass: -> telling python interpretor to pass this line dont worry about this
    - Relative path -> start from the current directory
    - Absolute path -> from the root of the hard disk
    -pypi - Python package index , it has thousands of python packages(visit: "https://pypi.org"
    -pip  - pip is a package management system used to install and manage software packages written in Python
    - We can have inner if condition in python ex: print(python in somelist) which returns boolean values.

